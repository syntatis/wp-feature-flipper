name: ci

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/ci.yml"
      - "**.php"
      - "composer.json"
      - "phpcs.xml.dist"
      - "phpstan.neon.dist"
      - "phpunit.xml.dist"

  push:
    branches:
      - main
    paths:
      - ".github/workflows/ci.yml"
      - "**.php"
      - "composer.json"
      - "phpcs.xml.dist"
      - "phpstan.neon.dist"
      - "phpunit.xml.dist"

jobs:
  checks:
    strategy:
      fail-fast: true
      matrix:
        php-version: ["7.4", "8.0", "8.1", "8.2", "8.3", "8.4"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"

      - name: Install PHP dependencies
        uses: ramsey/composer-install@v3

      - name: Run PHPCS
        run: composer run phpcs

      - name: Run PHPStan
        run: composer run phpstan

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        php-version: ["7.4", "8.0", "8.1", "8.2", "8.3", "8.4"]
        wp-core-version: ["WordPress/WordPress", "WordPress/WordPress#6.0"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version: "20.x"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          tools: composer:v2

      - name: Get Docker version
        run: docker -v

      - name: Install NodeJS dependencies
        run: npm ci

      - name: Install PHP dependencies
        uses: ramsey/composer-install@v3

      - name: Start wp-env
        run: |
          jq -n \
             --arg phpVersion "${{ matrix.php-version }}" \
             --arg wpCoreVersion "${{ matrix.wp-core-version }}" \
            '{"phpVersion":$phpVersion, "core":$wpCoreVersion}' \
            > .wp-env.override.json
          npm run wp-env:start
          npm run wp-env:tests-wordpress php -- -v

      - name: Run PHPUnit
        run: composer run phpunit

  typos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check spelling
        uses: crate-ci/typos@v1.31.2
